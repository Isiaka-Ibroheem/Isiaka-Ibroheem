%BACKWARD COMPUTATION OF TRAVERSE NETWORK
E1 = input("Enter the Easting of First Point --> "); %TAKES THE EAST COORDINATE OF A POINT.
N1 = input("Enter Northing of First Point --> ");   %TAKES THE NORTH COORDINATE OF A POINT.
E2 = input("Enter Easting of Second Point --> ");   %TAKES THE EAST COORDINATE OF ANOTHER POINT.
N2 = input("Enter Northing of Second Point --> ");  %TAKES THE NORTH COORDINATE OF ANOTHER POINT.

DEP = E2 - E1   %COMPUTE THE CHANGE IN EASTINGS I.E DEPARTURE

LAT = N2 - N1   %COMPUTE THE CHANGE IN NORTHINGS I.E LATITUDE.

DISTANCE = sqrt((DEP^2) + (LAT^2))   %CALCULATES THE DISTANCE BETWEEN THE POINTS.
AZIMUTH = abs(atand(DEP/LAT))             %CALCULATES THE AZIMUTH, THOUGH THIS WILL BE SUBJETED TO SOME CONDITIONS.

%CONDITIONS FOR COMPUTING THE AZIMUTH.
SECOND_QUADRANT = 360 - AZIMUTH;  %WHEN THE DEP AND LAT FALLS IN THE SECOND QUADRANT.
THIRD_QUADRANT = 180 + AZIMUTH;   %WHEN THE DEP AND LAT FALLS IN THE THIRD QUADRANT.
FOURTH_QUADRANT = 180 - AZIMUTH;  %WHEN THE DEP AND LAT FALLS IN THE FOURTH QUADRANT.
 
%FUNCTION TO PRINT THE DISTANCE.
fprintf('The Calculated Distance is -->%d\n ', DISTANCE)

if DEP < 0 & LAT > 0
    fprintf('The Computed Azimuth is --> %d\n', SECOND_QUADRANT) %HERE THE DEP IS NEGATIVE AND THE LAT IS POSITIVE.
elseif DEP < 0 & LAT < 0
    fprintf('The Computed Azimuth is --> %d\n', THIRD_QUADRANT)  %HERE THE DEP IS NEGATIVE AND THE LAT IS NEGATIVE.
elseif DEP > 0 & LAT < 0
    fprintf('The Computed Azimuth is --> %d\n', FOURTH_QUADRANT) %HERE, THE DEP IS POSITIVE AND THE LAT IS NEGATIVE.
else
    fprintf('The Computed Azimuth is --> %d\n', AZIMUTH)         %HERE, THE DEP IS POSITIVE AND THE LAT IS POSITIVE.
end